name: PHP Tests

on:
  push:
    branches:
      - development
    paths:
      - 'src/**.php'
      - 'tests/**.php'
      - composer.json
      - phpunit.xml.dist
      - .github/workflows/phpunit.yml

  pull_request:
    branches:
      - development
    paths:
      - 'src/**.php'
      - 'tests/**.php'
      - composer.json
      - phpunit.xml.dist
      - .github/workflows/phpunit.yml

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  tests:
    name: PHP ${{ matrix.php-versions }} - ${{ matrix.db-platforms }}
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['7.4', '8.0']
        db-platforms: ['MySQLi']
        mysql-versions: ['5.7']
        include:
          - php-versions: '7.4'
            db-platforms: MySQLi
            mysql-versions: '8.0'

    services:
      mysql:
        image: mysql:${{ matrix.mysql-versions }}
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: web_service_tests
          MYSQL_USER: tests_user
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: composer
          coverage: xdebug
        env:
          update: true

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --ansi --no-interaction

      - name: Compute coverage option
        uses: actions/github-script@v6
        id: phpunit-coverage-option
        with:
          script: 'return "${{ matrix.php-versions }}" == "8.0" ? "" : "--no-coverage"'
          result-encoding: string
      
      - name: Test with PHPUnit
        run: script -e -c "vendor/bin/phpunit --color=always --exclude-group=auto-review ${{ steps.phpunit-coverage-option.outputs.result }}"
        
      - name: Run Coveralls
        if: github.repository_owner == 'daycry' && matrix.php-versions == '8.0'
        run: |
          composer global require --ansi php-coveralls/php-coveralls:^2.4
          php-coveralls --coverage_clover=build/logs/clover.xml -v
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_PARALLEL: true
          COVERALLS_FLAG_NAME: PHP ${{ matrix.php-versions }} - ${{ matrix.db-platforms }}
  coveralls-finish:
    if: github.repository_owner == 'daycry'
    needs: [tests]
    runs-on: ubuntu-latest
    
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
